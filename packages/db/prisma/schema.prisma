generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String  
  avatarId String?
  avatar   Avatar?  @relation(fields: [avatarId], references: [id])
  role     Role
  spaces   Space[]
}

model Space {
  id            String         @id @unique @default(cuid())
  name String
  width         Int
  height        Int
  creatorId     String
  creator       User           @relation(fields: [creatorId], references: [id])
  thumbnail     String?
  spaceElements SpaceElement[]
}

model Element {
  id            String         @id @unique @default(cuid())
  width         Int
  height        Int
  imageUrl      String
  static Boolean
  spaceElements SpaceElement[]
  mapElements   MapElement[]
}

model SpaceElement {
  id        String  @id @unique @default(cuid())
  elementId String
  spaceId   String
  x  Int
  y Int
  space     Space   @relation(fields: [spaceId], references: [id])
  element   Element @relation(fields: [elementId], references: [id])
}

model Map {
  id          String       @id @unique @default(cuid())
  name        String
  width       Int
  height      Int
  mapElements MapElement[]
}

model MapElement {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  map       Map     @relation(fields: [mapId], references: [id])
  element   Element @relation(fields: [elementId], references: [id])
}

model Avatar {
  id       String @id @unique @default(cuid())
  name     String?
  imageUrl String?
  users    User[]
}

enum Role {
  Admin
  User
}
